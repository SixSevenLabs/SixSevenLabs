#!/bin/bash

# SixSevenLabs Run Script
# This script starts the development environment

set -e  # Exit on any error

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {t
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to start frontend
start_frontend() {
    print_status "Starting frontend..."
    
    if [ ! -d "frontend" ]; then
        print_error "Frontend directory not found!"
        exit 1
    fi
    
    cd frontend
    
    # Check if node_modules exists
    if [ ! -d "node_modules" ]; then
        print_warning "node_modules not found. Installing dependencies..."
        npm install
    fi
    
    print_success "Starting Next.js development server..."
    npm run dev
}

# Function to start backend (placeholder for future implementation)
start_backend() {
    print_status "Backend startup functionality will be implemented here..."
    # TODO: Implement backend startup logic
    # This could include:
    # - Starting a Python/Node.js/Go server
    # - Setting up database connections
    # - Running migrations
    # - Starting background services
}

# Function to start all services
start_all() {
    print_status "Starting all services..."
    
    # For now, just start frontend
    # In the future, this could start backend in parallel using background processes
    start_frontend
    
    # Future implementation might look like:
    # start_backend &
    # BACKEND_PID=$!
    # start_frontend &
    # FRONTEND_PID=$!
    # wait $FRONTEND_PID $BACKEND_PID
}

# Function to show help
show_help() {
    echo "SixSevenLabs Development Environment"
    echo ""
    echo "Usage: ./run.sh [COMMAND]"
    echo ""
    echo "Commands:"
    echo "  frontend    Start only the frontend (Next.js)"
    echo "  backend     Start only the backend (not implemented yet)"
    echo "  all         Start all services (default)"
    echo "  help        Show this help message"
    echo ""
    echo "Examples:"
    echo "  ./run.sh              # Start all services"
    echo "  ./run.sh frontend     # Start only frontend"
    echo "  ./run.sh backend      # Start only backend (placeholder)"
}

# Main script logic
main() {
    print_status "SixSevenLabs Development Environment"
    
    # Check if Node.js is installed
    if ! command_exists node; then
        print_error "Node.js is not installed. Please install Node.js to continue."
        exit 1
    fi
    
    # Check if npm is installed
    if ! command_exists npm; then
        print_error "npm is not installed. Please install npm to continue."
        exit 1
    fi
    
    # Parse command line arguments
    case "${1:-all}" in
        "frontend")
            start_frontend
            ;;
        "backend")
            start_backend
            ;;
        "all")
            start_all
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            print_error "Unknown command: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Run main function with all arguments
main "$@"
